{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kroul\\\\Downloads\\\\shop-master\\\\shop-master\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Items from \"./components/Items\";\nimport Categories from \"./components/Categories\";\nimport ShowFullItem from \"./components/ShowFullItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orders: [],\n      // Каждый элемент массива будет содержать объект {item: товар, quantity: количество}\n      currentItems: [],\n      showFullItem: false,\n      fullItem: {}\n    };\n    this.addToOrder = this.addToOrder.bind(this);\n    this.deleteOrder = this.deleteOrder.bind(this);\n    this.chooseCategory = this.chooseCategory.bind(this);\n    this.onShowItem = this.onShowItem.bind(this);\n  }\n  componentDidMount() {\n    this.fetchProducts(); // Получаем продукты с сервера после монтирования компонента\n  }\n  fetchProducts() {\n    // Выполняем запрос к серверу Express для получения списка продуктов\n    fetch(\"http://localhost:9001/products\").then(response => response.json()).then(data => {\n      this.setState({\n        currentItems: data.data\n      }); // Устанавливаем полученные продукты в состояние\n    }).catch(error => {\n      console.error(\"Ошибка при получении продуктов:\", error);\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        orders: this.state.orders,\n        onDelete: this.deleteOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Categories, {\n        chooseCategory: category => this.chooseCategory(category)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Items, {\n        onShowItem: this.onShowItem,\n        items: this.state.currentItems // Передаем текущие продукты в компонент Items\n        ,\n        onAdd: this.addToOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), this.state.showFullItem && /*#__PURE__*/_jsxDEV(ShowFullItem, {\n        onAdd: this.addToOrder,\n        onShowItem: this.onShowItem,\n        item: this.state.fullItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n  onShowItem(item) {\n    this.setState({\n      fullItem: item,\n      showFullItem: !this.state.showFullItem\n    });\n  }\n  chooseCategory(category) {\n    // Фильтруем текущие продукты по выбранной категории\n    const filteredItems = this.state.currentItems.filter(item => item.category === category);\n\n    // Устанавливаем выбранную категорию и отфильтрованные продукты в состояние\n    this.setState({\n      selectedCategory: category,\n      filteredItems: filteredItems\n    });\n  }\n  deleteOrder(index) {\n    // Создаем копию массива заказов и удаляем товар по указанному индексу\n    const updatedOrders = [...this.state.orders];\n    updatedOrders.splice(index, 1);\n    // Обновляем состояние orders\n    this.setState({\n      orders: updatedOrders\n    });\n  }\n  addToOrder(item) {\n    // Создаем новый массив заказов, добавляя в него новый товар\n    const updatedOrders = [...this.state.orders, item];\n    // Обновляем состояние orders\n    this.setState({\n      orders: updatedOrders\n    });\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Header","Footer","Items","Categories","ShowFullItem","jsxDEV","_jsxDEV","App","constructor","props","state","orders","currentItems","showFullItem","fullItem","addToOrder","bind","deleteOrder","chooseCategory","onShowItem","componentDidMount","fetchProducts","fetch","then","response","json","data","setState","catch","error","console","render","className","children","onDelete","fileName","_jsxFileName","lineNumber","columnNumber","category","items","onAdd","item","filteredItems","filter","selectedCategory","index","updatedOrders","splice"],"sources":["C:/Users/kroul/Downloads/shop-master/shop-master/frontend/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Items from \"./components/Items\";\nimport Categories from \"./components/Categories\";\nimport ShowFullItem from \"./components/ShowFullItem\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orders: [], // Каждый элемент массива будет содержать объект {item: товар, quantity: количество}\n      currentItems: [],\n      showFullItem: false,\n      fullItem: {}\n    };\n    \n    this.addToOrder = this.addToOrder.bind(this);\n    this.deleteOrder = this.deleteOrder.bind(this);\n    this.chooseCategory = this.chooseCategory.bind(this);\n    this.onShowItem = this.onShowItem.bind(this);\n  }\n  \n  \n  componentDidMount() {\n    this.fetchProducts(); // Получаем продукты с сервера после монтирования компонента\n  }\n\n  fetchProducts() {\n    // Выполняем запрос к серверу Express для получения списка продуктов\n    fetch(\"http://localhost:9001/products\")\n      .then(response => response.json())\n      .then(data => {\n        this.setState({ currentItems: data.data }); // Устанавливаем полученные продукты в состояние\n      })\n      .catch(error => {\n        console.error(\"Ошибка при получении продуктов:\", error);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Header orders={this.state.orders} onDelete={this.deleteOrder} />\n        <Categories chooseCategory={(category) => this.chooseCategory(category)} />\n\n        <Items\n          onShowItem={this.onShowItem}\n          items={this.state.currentItems} // Передаем текущие продукты в компонент Items\n          onAdd={this.addToOrder}\n        />\n        {this.state.showFullItem && (\n          <ShowFullItem\n            onAdd={this.addToOrder}\n            onShowItem={this.onShowItem}\n            item={this.state.fullItem}\n          />\n        )}\n        <Footer />\n      </div>\n    );\n  }\n\n  onShowItem(item) {\n    this.setState({\n      fullItem: item,\n      showFullItem: !this.state.showFullItem\n    });\n  }\n\n  chooseCategory(category) {\n    // Фильтруем текущие продукты по выбранной категории\n    const filteredItems = this.state.currentItems.filter(item => item.category === category);\n    \n    // Устанавливаем выбранную категорию и отфильтрованные продукты в состояние\n    this.setState({\n      selectedCategory: category,\n      filteredItems: filteredItems\n    });\n  }\n  deleteOrder(index) {\n    // Создаем копию массива заказов и удаляем товар по указанному индексу\n    const updatedOrders = [...this.state.orders];\n    updatedOrders.splice(index, 1);\n    // Обновляем состояние orders\n    this.setState({ orders: updatedOrders });\n  }\n  \n  \n  addToOrder(item) {\n    // Создаем новый массив заказов, добавляя в него новый товар\n    const updatedOrders = [...this.state.orders, item];\n    // Обновляем состояние orders\n    this.setState({ orders: updatedOrders });\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}