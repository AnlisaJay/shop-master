{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kroul\\\\Downloads\\\\shop-master\\\\shop-master\\\\frontend\\\\src\\\\contexts\\\\UserContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\n\n// Создаем контекст пользователя\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\n\n// Создаем провайдер контекста пользователя\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  // Состояние пользователя\n  const [user, setUser] = useState(null);\n\n  // Функция для установки пользователя после входа\n  const setUserAfterLogin = userData => {\n    setUser(userData);\n  };\n  return (\n    /*#__PURE__*/\n    // Предоставляем состояние пользователя всем дочерним компонентам\n    _jsxDEV(UserContext.Provider, {\n      value: {\n        user,\n        setUserAfterLogin\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(UserProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","setUserAfterLogin","userData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kroul/Downloads/shop-master/shop-master/frontend/src/contexts/UserContext.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\n\n// Создаем контекст пользователя\nexport const UserContext = createContext();\n\n// Создаем провайдер контекста пользователя\nexport const UserProvider = ({ children }) => {\n  // Состояние пользователя\n  const [user, setUser] = useState(null);\n\n  // Функция для установки пользователя после входа\n  const setUserAfterLogin = userData => {\n    setUser(userData);\n  };\n\n  return (\n    // Предоставляем состояние пользователя всем дочерним компонентам\n    <UserContext.Provider value={{ user, setUserAfterLogin }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;;AAEtD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACA,MAAMS,iBAAiB,GAAGC,QAAQ,IAAI;IACpCF,OAAO,CAACE,QAAQ,CAAC;EACnB,CAAC;EAED;IAAA;IACE;IACAR,OAAA,CAACC,WAAW,CAACQ,QAAQ;MAACC,KAAK,EAAE;QAAEL,IAAI;QAAEE;MAAkB,CAAE;MAAAJ,QAAA,EACtDA;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACW;EAAC;AAE3B,CAAC;AAACV,EAAA,CAfWF,YAAY;AAAAa,EAAA,GAAZb,YAAY;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}